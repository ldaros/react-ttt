{"version":3,"sources":["Square.jsx","Board.jsx","Miniature.jsx","Game.jsx","index.js"],"names":["Square","props","color","className","onClick","value","Board","i","this","winner","includes","squares","renderSquare","Component","Miniature","elements","data","map","square","Game","state","history","Array","fill","xIsNext","stepNumber","step","setState","slice","length","calculateWinner","concat","status","current","moves","move","jumpTo","win_line","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"gSAGe,SAASA,EAAOC,GAC7B,OAAIA,EAAMC,MAEN,wBAAQC,UAAU,eAAeC,QAASH,EAAMG,QAAhD,SACGH,EAAMI,QAKX,wBAAQF,UAAU,SAASC,QAASH,EAAMG,QAA1C,SACGH,EAAMI,Q,ICTQC,E,kKACnB,SAAaC,GAAI,IACXL,EADU,OAOd,OAHEA,EADuB,MAArBM,KAAKP,MAAMQ,QAAkBD,KAAKP,MAAMQ,OAAOC,SAASH,GAClD,EACK,EAGb,cAAC,EAAD,CACEF,MAAOG,KAAKP,MAAMU,QAAQJ,GAC1BH,QAAS,kBAAM,EAAKH,MAAMG,QAAQG,IAClCL,MAAOA,M,oBAKb,WACE,OACE,gCACE,sBAAKC,UAAU,YAAf,UACGK,KAAKI,aAAa,GAClBJ,KAAKI,aAAa,GAClBJ,KAAKI,aAAa,MAErB,sBAAKT,UAAU,YAAf,UACGK,KAAKI,aAAa,GAClBJ,KAAKI,aAAa,GAClBJ,KAAKI,aAAa,MAErB,sBAAKT,UAAU,YAAf,UACGK,KAAKI,aAAa,GAClBJ,KAAKI,aAAa,GAClBJ,KAAKI,aAAa,a,GAjCMC,a,MCDpB,SAASC,EAAUb,GAChC,IAEMc,EAFUd,EAAMe,KAEGC,KAAI,SAACC,EAAQX,GACpC,OAAO,4BAAkBW,GAAkB,IAA5B,IAAMX,MAGvB,OACE,wBAAQJ,UAAU,YAAYC,QAASH,EAAMG,QAA7C,SACGW,I,ICPcI,E,kDACnB,WAAYlB,GAAQ,IAAD,8BACjB,cAAMA,IAEDmB,MAAQ,CACXC,QAAS,CAAC,CAAEV,QAASW,MAAM,GAAGC,KAAK,QACnCC,SAAS,EACTC,WAAY,GANG,E,0CAUnB,SAAOC,GACLlB,KAAKmB,SAAS,CAAEF,WAAYC,EAAMF,QAASE,EAAO,IAAM,M,yBAG1D,SAAYnB,GACV,IAAMc,EAAUb,KAAKY,MAAMC,QAAQO,MAAM,EAAGpB,KAAKY,MAAMK,WAAa,GAE9Dd,EADUU,EAAQA,EAAQQ,OAAS,GACjBlB,QAAQiB,QAC5BE,EAAgBnB,IAAYA,EAAQJ,KAGxCI,EAAQJ,GAAKC,KAAKY,MAAMI,QAAU,IAAM,IACxChB,KAAKmB,SAAS,CACZN,QAASA,EAAQU,OAAO,CACtB,CACEpB,QAASA,KAGbc,WAAYJ,EAAQQ,OACpBL,SAAUhB,KAAKY,MAAMI,a,oBAIzB,WAAU,IAyBJQ,EAzBG,OACDX,EAAUb,KAAKY,MAAMC,QACrBY,EAAUZ,EAAQb,KAAKY,MAAMK,YAC7BhB,EAASqB,EAAgBG,EAAQtB,SAEjCuB,EAAQb,EAAQJ,KAAI,SAACS,EAAMS,GAC/B,OAAIA,EAEA,6BACE,cAAC,EAAD,CACE/B,QAAS,kBAAM,EAAKgC,OAAOD,IAC3BnB,KAAMK,EAAQc,GAAMxB,WAHfwB,GAST,+BACE,wBAAQ/B,QAAS,kBAAM,EAAKgC,OAAOD,IAAnC,SACG,qBACO,MAHHA,MAUbH,EADEvB,EACO,WAAaA,EAAO,GACD,KAAnBY,EAAQQ,QAAkBC,EAAgBG,EAAQtB,SAGlD,iBAAmBH,KAAKY,MAAMI,QAAU,IAAM,KAF9C,OAKX,IAAIa,EAAWP,EAAgBG,EAAQtB,SACnCmB,EAAgBG,EAAQtB,SAAS,GACjC,KAEJ,OACE,sBAAKR,UAAU,OAAf,UACE,sBAAKA,UAAU,aAAf,UACE,cAAC,EAAD,CACEQ,QAASsB,EAAQtB,QACjBP,QAAS,SAACG,GAAD,OAAO,EAAK+B,YAAY/B,IACjCE,OAAQ4B,IACP,OAEL,sBAAKlC,UAAU,YAAf,UACE,4BAAI6B,IADN,IACkB,6BAAKE,c,GAlFGrB,aAyFlC,SAASiB,EAAgBnB,GAWvB,IAVA,IAAM4B,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAhC,EAAI,EAAGA,EAAIgC,EAAMV,OAAQtB,IAAK,CACrC,kBAAkBgC,EAAMhC,GAAxB,GAAOiC,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAI/B,EAAQ6B,IAAM7B,EAAQ6B,KAAO7B,EAAQ8B,IAAM9B,EAAQ6B,KAAO7B,EAAQ+B,GAEpE,MADa,CAAC/B,EAAQ6B,GAAID,EAAMhC,IAIpC,OAAO,KC5GToC,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.ceb96739.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./styles/Square.scss\";\r\n\r\nexport default function Square(props) {\r\n  if (props.color)\r\n    return (\r\n      <button className=\"square color\" onClick={props.onClick}>\r\n        {props.value}\r\n      </button>\r\n    );\r\n\r\n  return (\r\n    <button className=\"square\" onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./styles/Board.scss\";\r\nimport Square from \"./Square\";\r\n\r\nexport default class Board extends Component {\r\n  renderSquare(i) {\r\n    let color;\r\n\r\n    if (this.props.winner != null && this.props.winner.includes(i)) {\r\n      color = 1;\r\n    } else color = 0;\r\n\r\n    return (\r\n      <Square\r\n        value={this.props.squares[i]}\r\n        onClick={() => this.props.onClick(i)}\r\n        color={color}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./styles/Miniature.scss\";\r\n\r\nexport default function Miniature(props) {\r\n  const squares = props.data;\r\n\r\n  const elements = squares.map((square, i) => {\r\n    return <p key={\"p\" + i}>{square ? square : \"\"}</p>;\r\n  });\r\n\r\n  return (\r\n    <button className=\"Miniature\" onClick={props.onClick}>\r\n      {elements}\r\n    </button>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./styles/Game.scss\";\r\nimport Board from \"./Board\";\r\nimport Miniature from \"./Miniature\";\r\n\r\nexport default class Game extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      history: [{ squares: Array(9).fill(null) }],\r\n      xIsNext: true,\r\n      stepNumber: 0,\r\n    };\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({ stepNumber: step, xIsNext: step % 2 === 0 });\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n    this.setState({\r\n      history: history.concat([\r\n        {\r\n          squares: squares,\r\n        },\r\n      ]),\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n\r\n    const moves = history.map((step, move) => {\r\n      if (move) {\r\n        return (\r\n          <li key={move}>\r\n            <Miniature\r\n              onClick={() => this.jumpTo(move)}\r\n              data={history[move].squares}\r\n            />\r\n          </li>\r\n        );\r\n      } else\r\n        return (\r\n          <li key={move}>\r\n            <button onClick={() => this.jumpTo(move)}>\r\n              {\"Go to game start\"}\r\n            </button>{\" \"}\r\n          </li>\r\n        );\r\n    });\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = \"Winner: \" + winner[0];\r\n    } else if (history.length === 10 && !calculateWinner(current.squares)) {\r\n      status = \"Draw\";\r\n    } else {\r\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n    }\r\n\r\n    let win_line = calculateWinner(current.squares)\r\n      ? calculateWinner(current.squares)[1]\r\n      : null;\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={current.squares}\r\n            onClick={(i) => this.handleClick(i)}\r\n            winner={win_line}\r\n          />{\" \"}\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <p>{status}</p> <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      let winner = [squares[a], lines[i]];\r\n      return winner;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Game from \"./Game\";\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n"],"sourceRoot":""}